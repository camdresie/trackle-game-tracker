
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import { getEnvironment, getDatabaseEnvironment } from '@/utils/environment';

// Get environment variables with fallbacks
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || "";
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY || "";

// Check for missing environment variables
if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  console.error('==================== SUPABASE INTEGRATION ERROR ====================');
  console.error('Missing Supabase environment variables. Please check your .env file:');
  if (!SUPABASE_URL) console.error('- VITE_SUPABASE_URL is missing');
  if (!SUPABASE_PUBLISHABLE_KEY) console.error('- VITE_SUPABASE_ANON_KEY is missing');
  console.error('=================================================================');
}

// Log environment information
const appEnv = getEnvironment();
const dbEnv = getDatabaseEnvironment();

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create singleton instance to prevent multiple GoTrueClient instances
let supabaseInstance: ReturnType<typeof createClient<Database>> | null = null;

const getSupabaseClient = () => {
  if (!supabaseInstance) {
    supabaseInstance = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
      auth: {
        storage: localStorage,
        persistSession: true,
        autoRefreshToken: true,
      }
    });
  }
  return supabaseInstance;
};

export const supabase = getSupabaseClient();
